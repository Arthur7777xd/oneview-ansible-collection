---
# task for session_management
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- debug: var=session

- name: Ensure that the SNMPv3 user is present using the default configuration
  oneview_appliance_device_snmp_v3_users:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    name: "{{ user_name }}"
    data:
        type: "{{ type }}"
        userName: "{{ user_name }}"
        securityLevel: "{{ security_level }}"
        authenticationProtocol: "{{ authentication_protocol }}"    
        authenticationPassphrase: "{{ authentication_passphrase }}"            
  delegate_to: localhost

- debug:
    var: appliance_device_snmp_v3_users

- name: Set the password of specified SNMPv3 user
  oneview_appliance_device_snmp_v3_users:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    name: "{{ user_name }}"
    data:
      userName: "{{ user_name }}"
      authenticationPassphrase: "{{ authentication_passphrase }}"
  delegate_to: localhost

- debug:
    var: appliance_device_snmp_v3_users

- name: Ensure that the SNMPv3 user is absent
  oneview_appliance_device_snmp_v3_users:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: absent
    name: "{{ user_name }}"
    data:
        userName: "{{ user_name }}"
  delegate_to: localhost

- name: Creating the SNMPv3 user for automation
  oneview_appliance_device_snmp_v3_users:
    config: "{{ config }}"
    state: present
    name: "user123456"
    data:
        type: "Users"
        userName: "user123456"
  delegate_to: localhost

- name: Creating another SNMPv3 user for automation 
  oneview_appliance_device_snmp_v3_users:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    name: "test2"
    data:
        type: "Users"
        userName: "test2"
  delegate_to: localhost