---
    - name: Get currentVersion from URL
      oneview_version_facts:
         config: "{{ config }}" 
      delegate_to: localhost
      when: contents.api_version|string|length == 0
      register: version
   
    - name: Print currentVersion if an apiVersion is not specified in config file
      set_fact: 
        currentVersion: "{{ version.ansible_facts.version.currentVersion | int }}"
      when: contents.api_version|string|length == 0

    - name: Print currentVersion if api version is specified in config file
      set_fact: 
        currentVersion: "{{ contents.api_version }}"
      when: contents.api_version|string|length != 0
        
    - name: Create an Ethernet Network
      oneview_ethernet_network:
        config: "{{ config }}"
        state: present
        data:
          name: '{{ network_name }}'
          vlanId: 200
          ethernetNetworkType: Tagged
          purpose: General
          smartLink: false
          privateNetwork: false
          bandwidth:
              maximumBandwidth: 2000
              typicalBandwidth: 1000
      delegate_to: localhost

    - name: Update the Ethernet Network changing bandwidth and purpose
      oneview_ethernet_network:
        config: "{{ config }}"
        state: present
        data:
          name: '{{ network_name }}'
          purpose: Management
          bandwidth:
              maximumBandwidth: 3000
              typicalBandwidth: 2000
      delegate_to: localhost

    - name: Reset to the default network connection template
      oneview_ethernet_network:
        config: "{{ config }}"
        state: default_bandwidth_reset
        data:
          name: '{{ network_name }}'
      delegate_to: localhost

    - name: Ensure ethernet network has no scopes
      oneview_ethernet_network:
        config: "{{ config }}"
        state: present
        data:
          name: "{{ network_name }}"
          scopeUris: []
      when: currentVersion >= '300' and currentVersion <= '500'
      delegate_to: localhost

    - name: Ensure Ethernet Network has two scopes
      oneview_ethernet_network:
        config: "{{ config }}"
        state: present
        data:
          name: "{{ network_name }}"
          scopeUris: "{{ network_scope_uris }}"
      when: currentVersion >= '300' and currentVersion <= '500'
      delegate_to: localhost

    - name: Rename the Ethernet Network to 'Updated Ethernet Network'
      oneview_ethernet_network:
        config: "{{ config }}"
        state: present
        data:
          name: '{{ network_name }}'
          newName: 'Updated Ethernet Network'
      delegate_to: localhost

    - name: Delete the Ethernet Network
      oneview_ethernet_network:
        config: "{{ config }}"
        state: absent
        data:
          name: 'Updated Ethernet Network'
      delegate_to: localhost
      register: deleted

    - name: Create Ethernet Networks in bulk
      oneview_ethernet_network:
        config: "{{ config }}"
        state: present
        data:
          vlanIdRange: '1-3,5,7'
          purpose: General
          namePrefix: EthernetNetwork
          smartLink: false
          privateNetwork: false
          bandwidth:
              maximumBandwidth: 10000
              typicalBandwidth: 2000
      delegate_to: localhost

    - name: Delete Ethernet Networks in bulk
      oneview_ethernet_network:
        config: "{{ config }}"
        state: absent
        data:
          networkUris: "{{ networkUris_to_bulkdelete }}"
      delegate_to: localhost
      when: currentVersion >= '1600'
