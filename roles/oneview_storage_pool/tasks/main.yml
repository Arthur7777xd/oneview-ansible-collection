---
- name: Get currentVersion from URL
  oneview_version_facts:
    config: "{{ config }}" 
  delegate_to: localhost
  when: contents.api_version == ""
  register: version

- name: Print currentVersion if api version is not specified in config file
  set_fact: 
    currentVersion: "{{ version.ansible_facts.version.currentVersion | int }}"
  when: contents.api_version == ""

- name: Print currentVersion if api version is specified in config file
  set_fact: 
    currentVersion: contents.api_version | string
  when: contents.api_version != ""

# Below task works for only APIVersion 300
- name: Create a Storage Pool
  oneview_storage_pool:
    config: "{{ config }}"
    state: present
    data:
      storageSystemUri: '{{ storage_system_uri }}'
      poolName: '{{ storage_pool_name }}'
  delegate_to: localhost
  when: currentVersion == '300'

# To manage/unmanage a storage pool, issue a PUT with the isManaged attribute set as true to manage or false to unmanage.
# Pool should be in discovered state
- name: Ensure the Storage Pool '{{ storage_pool_name }}' is not managed
  oneview_storage_pool:
    config: "{{ config }}"
    state: present
    data:
      name: '{{ storage_pool_name }}'
      isManaged: false
  delegate_to: localhost

# Below 2 task works for only APIVersion 300
- name: Delete the Storage Pool
  oneview_storage_pool:
    config: "{{ config }}"
    state: absent
    data:
      poolName: '{{ storage_pool_name }}'
  delegate_to: localhost
  when: currentVersion == '300'

- name: Do nothing when Storage Pool is absent
  oneview_storage_pool:
    config: "{{ config }}"
    state: absent
    data:
      poolName: '{{ storage_pool_name }}'
  delegate_to: localhost
  when: currentVersion == '300'
