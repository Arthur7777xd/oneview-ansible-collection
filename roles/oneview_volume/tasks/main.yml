---
- name: Gather facts about a Storage Pool by name
  oneview_storage_pool_facts:
    config: "{{ config }}"
    name: "CPG_FC-AO"
  delegate_to: localhost

- debug: var=storage_pools

- name: Gather facts about a Storage Volume Template by name
  oneview_storage_volume_template_facts:
    config: "{{ config }}"
    name: "{{ volume_template_name }}"
  delegate_to: localhost

- debug: var=storage_volume_templates    

- name: Create a Volume with a specified Storage Pool
  oneview_volume:
    config: '{{ config }}'
    state: present
    data:
      properties:
        name: 'Volume with Storage Pool'
        description: 'Test volume with common creation: Storage Pool'
        size: 2147483648  # 2GB
        storagePool: '{{ storage_pools[0].uri }}'
      templateUri: '{{ storage_volume_templates[0].uri }}'
      isPermanent: false
  delegate_to: localhost

- name: Extend the Volume size
  oneview_volume:
    config: '{{ config }}'
    state: present
    data:
      name: 'Volume with Storage Pool'
      provisionedCapacity: 2684354560  # 2.5GB - The volume actual size
  delegate_to: localhost

- name: Create a volume with a specified Snapshot Pool
  oneview_volume:
    config: '{{ config }}'
    state: present
    data:
      properties:
        name: 'Volume with Snapshot Pool'
        description: 'Test volume with common creation: Storage System + Storage Pool + Snapshot Pool'
        size: 1073741824  # 1GB
        storagePool: '{{ storage_pools[0].uri }}'
        snapshotPool: '{{ storage_pools[0].uri }}'
      templateUri: '{{ storage_volume_templates[0].uri }}'
      isPermanent: false
      initialScopeUris: ['/rest/scopes/754e0dce-3cbd-4188-8923-edf86f068bf7'] # This option available only with API version 600 and above
  delegate_to: localhost

- name: Gather facts about a Storage System by name
  oneview_storage_system_facts:
    config: "{{ config }}"
    name: "{{ storage_system_name }}"
  delegate_to: localhost

- debug: var=storage_systems

# Supported only with API version 300 and below.
- name: Add a volume for management by the appliance using the WWN of the volume
  oneview_volume:
    config: '{{ config }}'
    state: present
    data:
      type: AddStorageVolumeV2
      name: 'Volume added with a specific WWN'
      description: 'Test volume added for management: Storage System + Storage Pool + WWN'
      storageSystemUri: '{{ storage_systems[0].uri }}'
      wwn: '{{ wwn }}'
      provisioningParameters:
          shareable: True
  when: wwn is defined
  delegate_to: localhost

- name: Update the name of the volume to 'Volume with Storage Pool - Renamed' and shareable to false
  oneview_volume:
    config: '{{ config }}'
    state: present
    data:
      name: 'Volume with Storage Pool'
      newName: 'Volume with Storage Pool - Renamed'
      isShareable: False
  delegate_to: localhost

- name: Remove extra presentations from the specified volume on the storage system
  oneview_volume:
    config: '{{ config }}'
    state: repaired
    data:
      name: 'Volume with Storage Pool - Renamed'
  delegate_to: localhost

- name: Create a new snapshot for the specified volume
  oneview_volume:
    config: '{{ config }}'
    state: snapshot_created
    data:
      name: 'Volume with Snapshot Pool'
      snapshotParameters:
        name: 'test_snapshot'
        description: 'New snapshot'
  delegate_to: localhost

- name: Delete the snapshot
  oneview_volume:
    config: '{{ config }}'
    state: snapshot_deleted
    data:
      name: 'Volume with Snapshot Pool'
      snapshotParameters:
        name: 'test_snapshot'
  delegate_to: localhost

- name: Delete the volume previously created with a Storage Pool
  oneview_volume:
    config: '{{ config }}'
    state: absent
    data:
      name: 'Volume with Storage Pool - Renamed'
  delegate_to: localhost

- name: Delete the volume previously created with a Snapshot Pool
    oneview_volume:
    config: '{{ config }}'
    state: absent
    data:
      name: 'Volume with Snapshot Pool'
  delegate_to: localhost

- name: Delete the volume previously added using the WWN of the volume
  oneview_volume:
    config: '{{ config }}'
    state: absent
    data:
      name: 'Volume added with a specific WWN'
    export_only: True
  when: wwn is defined
  delegate_to: localhost