---  
- name: Ensure the ID Pools IPV4 Subnet exists
    oneview_id_pools_ipv4_subnet:
      config: "{{ config }}"
      state: present
      data:
        name: '{{ subnet_name }}'
        type: Subnet
        networkId: 10.10.1.0
        subnetmask: 255.255.255.0
        gateway: 10.10.1.1
        domain: example.com
        dnsServers:
          - 10.10.10.215
      delegate_to: localhost

- name: Do nothing with the ID Pools IPV4 Subnet when no changes are provided
    oneview_id_pools_ipv4_subnet:
      config: "{{ config }}"
      state: present
      data:
         networkId: '{{ network_id }}'
         type: Subnet
      delegate_to: localhost

- name: Update the ID Pools IPV4 Subnet with awesome.com domain
    oneview_id_pools_ipv4_subnet:
      config: "{{ config }}"
            state: present
      data:
        networkId: '{{ network_id }}'
        domain: awesome.com
      delegate_to: localhost

- name: Allocate the no of IPv4 ID's
    oneview_id_pools_ipv4_subnet:
      config: "{{ config }}"
      state: allocate
      data:
        networkId: '{{ network_id }}'
        count: 3
      delegate_to: localhost

- name: Get the allocated ID's List
    oneview_id_pools_ipv4_subnet:
      config: "{{ config }}"
      state: collect
      data:
        networkId: '{{ network_id }}'
        idList: '{{ id_pools_ipv4_subnet["idList"] }}'
      delegate_to: localhost

- name: Delete the ID Pools IPV4 Subnet
    oneview_id_pools_ipv4_subnet:
      config: "{{ config }}"
      state: absent
      data:
        networkId: '{{ network_id }}'
      delegate_to: localhost

- name: Do nothing when ID Pools IPV4 Subnet is absent
    oneview_id_pools_ipv4_subnet:
      config: "{{ config }}"
      state: absent
      data:
        networkId: '{{ network_id }}'
      delegate_to: localhost
